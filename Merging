After the repository is set up with multiple branches, users will want to merge
these branches into the master branch.  Merging can be simple or complicated,
depending on what was changed on the new branch.
This assumes that the user already has access to the repository on his/her
local machine and there is at least 1 branch on the repository other than the
master branch.

Simple merge (no conflicting commits):
A simple merge would be merging a branch that has no conflicting commits with
the master branch.  This would likely be because the files changed in each
branch were separate, or no commits were made on the master branch.
Note: You can merge into a branch that isn't master, by replacing master
      with whichever branch you want to merge into.
1. First, you must checkout the master branch.  Make sure you have no
   uncommitted changes on your current working branch and type in
   "git checkout master"
2. Type "git merge <name>" where <name> is the name of the branch you wish
   to merge into master.
3. Assuming no conflicts where created, the branch should merge into master
   and master will include all of the changes made on your branch.
4. If your branch is no longer needed, it can be deleted by typing
   "git branch -d <name>" where <name> is the name of the branch you want to
   delete.
